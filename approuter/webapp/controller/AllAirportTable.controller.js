sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/ui/core/BusyIndicator","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/json/JSONModel"],function(t,e,o,s,r,i){"use strict";return t.extend("ui5.rest.restwithui5.controller.AllAirportTable",{onInit:function(){console.log("All AirportTableController called...");this.DataRepository=this.getOwnerComponent().DataRepository;this.oRouter=this.getOwnerComponent().getRouter();this.aFilters=[];this.getView().setModel(new i({}),"filterModel");this.oRouter.getRoute("addAirport").attachPatternMatched(this._onPatternMatched,this)},_onPatternMatched:function(){this.getAllAirports()},onEditPress:function(t){console.log("onEditPress...");const e=t.getSource();const o=e.data("bindingContext");o["edit"]=true;const s=e.getBindingContext("airportsModel");console.log(s.getProperty("edit"));s.setProperty("edit",true)},onSavePress:function(t){console.log("onSavePress...");const s=t.getSource();const r=s.getBindingContext("airportsModel");const i=this.getView().getModel("airportsModel");const n=i.getProperty(r.getPath());delete n.aiportCode;if(this.DataRepository.modifyAirport){o.show()}console.log(this.DataRepository.modifyAirport(n)());this.DataRepository.createAirport(n,true)().then(()=>{e.show("Airport updated successfully");o.hide();r.setProperty("edit",false)}).catch(t=>{o.hide();console.log(t);console.log(t.status);if(t.status==401){window.localStorage.removeItem("FBS_token");this.getOwnerComponent().getModel().setProperty("/user",null);e.show("Please login...",{closeOnBrowserNavigation:false});this.oRouter.navTo("login");return}else if(t.status==400){const o=Object.keys(t.responseJSON);const s=Object.values(t.responseJSON);const r=[];o.forEach((t,e)=>{const o=`${t}: ${s[e]}`;r.push(o)});e.show(JSON.stringify(...r))}else{e.show("Unable to update Airport...")}})},onDeletePress:function(t){console.log("onDeletePress called");const o=t.getSource();const i=o.getBindingContext("airportsModel");const n=i.getProperty("airportId");const l=this.DataRepository.deleteAirport(n);console.log(l);const a=this.getView().byId("allAirportsTable");const c=a.getBinding("rows");const p=c.getModel();const d=c.getPath();const g=p.getProperty(d);console.log(g);l().then(t=>{console.log("oData after deletion",t);c.filter(new s("airportId",r.NE,t.airportId));e.show("Airport Deleted successfully")}).catch(t=>{console.error(t);e.show("Something went wrong unable to delete airport")})},filterAirports:function(t){const e=this.getView().getModel("filterModel");const o=e.getProperty("/airportCodeKeyword");const i=e.getProperty("/airportCityKeyword");const n=[];if(i){n.push(new s("city",r.Contains,i))}if(o){n.push(new s("airportCode",r.Contains,o))}const l=this.getView().byId("allAirportsTable");const a=l.getBinding();a.filter(n)},getAllAirports:function(){const t=this.getView().byId("allAirportsTable");console.log(t);t.setBusy(true);console.log("Getting all airports...");this.DataRepository.fetchAllAirports()().then(e=>{e.forEach(t=>{t["edit"]=false});console.log("data",e);this.getView().getModel("airportsModel").setProperty("/airports",e);t.setBusy(false)}).catch(o=>{console.error(o);e.show("Unbale to fetch all airports...");t.setBusy(false)})}})});
//# sourceMappingURL=AllAirportTable.controller.js.map