sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/Dialog","sap/m/Button","sap/ui/core/Fragment","sap/m/MessageToast","sap/ui/model/Filter","sap/ui/model/FilterOperator","ui5/rest/restwithui5/utils/utilFunctions"],function(e,t,o,n,s,i,r,l){"use strict";return e.extend("ui5.rest.restwithui5.controller.Booking",{onInit:function(){console.log("Booking controller fired");this.oRouter=this.getOwnerComponent().getRouter();this.oRouter.getRoute("Booking").attachPatternMatched(this._onRouteMatched,this)},_onRouteMatched:function(){this.getView().getModel().setProperty("/queryCompany",null);this.getView().getModel().setProperty("/querySourceCity",null);this.getView().getModel().setProperty("/queryDestCity",null);this.onFilterButtonPress(null);this.DataRepository=this.getOwnerComponent().DataRepository;const e=this.getOwnerComponent().getModel();console.log(e);var t=sap.ui.getCore().getEventBus();t.subscribe("FlightService","cancelSeatsSuccess",this.handleCancelSeatsSuccess,this);t.subscribe("Traveler","GetBookingsSuccess",this.handleGetBookingSuccessEvent,this);this.DataRepository.getTravelerBookings()},_test:function(e,t,o,n){console.log("test called ",o);this.DataRepository.getTravelerBookings()},handleGetBookingSuccessEvent:function(e,t,o,n){console.log("handleGetBookingSuccessEvent got data",o);if(Array.isArray(o.oBookings)&&o.oBookings.length>0){o.oBookings.sort(function(e,t){var o=new Date(e.createdAt);var n=new Date(t.createdAt);return n-o})}else{console.log("No bookings available to sort.")}if(!this.getOwnerComponent().getModel().getProperty("/bookings")){this.getOwnerComponent().getModel().setProperty("/bookings",o.oBookings);console.log("Component",this.getOwnerComponent().getModel())}else{this.getOwnerComponent().getModel().setProperty("/bookings",o.oBookings);console.log("Component",this.getOwnerComponent().getModel());var s=this.getView().byId("bookingsList");if(s){console.log("refresh called");s.getBinding("items").refresh()}}},isListNotEmpty:function(e){if(!e){return false}else if(e.length==0){return false}return true},handleCancelSeatsSuccess:function(e,t,o,n){console.log("handleCancelSeatsSuccess got ",o);console.log(this.getView().getBindingContext());this.DataRepository.getTravelerBookings();this.onCloseDialog(t)},formatDate:function(e){return new Date(e).toLocaleString()},getDuration:function(e,t){const o=l.getDuration(e,t);console.log(o);return o},onViewDetailsPress:function(e){console.log("called");const t=this.getView();console.log("oEvent",e);const o=e.getSource();const s=o.getBindingContext();const i=s.getProperty("passengers");const r=s.getProperty("cancelledSeats");console.log(r);const l=i.map((e,t)=>({...e,index:t+1,cancelled:r&&r.includes(e.seat)?true:false}));console.log("newPassengers",l);if(!this._oDialog){n.load({id:t.getId(),name:"ui5.rest.restwithui5.view.PassengerDetailsDialog",controller:this}).then(function(e){t.addDependent(e);this._oDialog=e;const o=this._oDialog.getModel();o.setProperty("/passengers",l);console.log(this._oDialog);this._oDialog.setBindingContext(s);this._oDialog.open()}.bind(this))}else{const e=this._oDialog.getModel();e.setProperty("/passengers",l);this._oDialog.setBindingContext(s);this._oDialog.open()}},addSeatToCancelList:function(e){console.log("addSeatToCancelList called");const t=e.getSource();const o=t.getBindingContext().getProperty("seat");console.log(o);const n=t.getBindingContext().getProperty("");console.log(n);const i=this.getOwnerComponent().getModel();let r=i.getProperty("/cancellationPassengers");console.log("before",r);if(!r){n["included"]=true;i.setProperty("/cancellationPassengers",[o]);console.log(i.getProperty("/cancellationPassengers"))}else{if(r.includes(o)){s.show("This seat is already in the cancellation seat list");return}n["included"]=true;r.push(o);i.setProperty("/cancellationPassengers",r)}console.log("after",i.getProperty("/cancellationPassengers"));t.getBindingContext().setProperty("included",true)},removeSeatToCancelList:function(e){const t=e.getSource();const o=t.getBindingContext().getProperty("seat");t.getBindingContext().setProperty("included",false);const n=this.getOwnerComponent().getModel();const s=n.getProperty("/cancellationPassengers");const i=s.filter(e=>e!=o);n.setProperty("/cancellationPassengers",i);console.log(n.getProperty("/cancellationPassengers"))},cancelSeats:function(e){const t=e.getSource();console.log(t.getBindingContext());console.log("oSource from cancelSeats",t);const o=t.getBindingContext();const n=o.getProperty("bookingId");console.log("BookingId",n);if(!n){s.show("Booking ID is missing");return}const i=this.getOwnerComponent().getModel();const r=i.getProperty("/cancellationPassengers");console.log(r);if(!r||r.length===0){s.show("No seats selected for cancellation");return}this.DataRepository.cancelSeats(r,n);this.DataRepository.getTravelerBookings();var l=this.getView().byId("bookingsList");if(l)l.refresh()},cancelBooking:function(e){const t=e.getSource();const o=t.getBindingContext();const n=o.getProperty("bookingId");console.log(n);this.DataRepository.cancelBooking(n);this.DataRepository.getTravelerBookings()},formatSeatList:function(e){console.log("aSeats",e);let t="";e&&e.forEach(e=>{t+=e+", "});return t},isInCancellPassengerList:function(e){console.log("isInCancellPassengerList called");const t=this.getOwnerComponent().getModel().getProperty("/cancellationPassengers");console.log("cancellationPassengers",t);return t&&t.includes(e)},onCloseDialog:function(e){if(this._oDialog)this._oDialog.close();this.getOwnerComponent().getModel().setProperty("/cancellationPassengers",null)},sumOf:function(e){if(!e){return 0}let t=e.reduce(function(e,t){return e+t},0);return t},splitWithPlus:function(e){if(!e){return}return e.join(" + ")},onFilterButtonPress(e){const t=this.getView();const o=[];const n=t.getModel().getProperty("/queryCompany");const s=t.getModel().getProperty("/querySourceCity");const l=t.getModel().getProperty("/queryDestCity");if(n)o.push(new i("flight/company",r.Contains,n));if(s)o.push(new i("flight/sourceAirport/city",r.Contains,s));if(l)o.push(new i("flight/destinationAirport/city",r.Contains,l));const g=this.byId("bookingsList");const c=g.getBinding("items");c.filter(o)},onAirportFilter:function(e){const t=[];const o=e.getParameter("query");if(o){t.push(new i("flight/sourceAirport/city",r.Contains,o))}const n=this.byId("bookingsList");const s=n.getBinding("items");s.filter(t)},onExit:function(){this.getOwnerComponent().getModel().setProperty("/bookings",null);this.getView().destroy()}})});
//# sourceMappingURL=Booking.controller.js.map